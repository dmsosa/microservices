server:
  servlet:
    context-path: /api/auth
  port: 7099

spring:
  security:
    oauth2:
      authorizationserver:
        issuer: "http://auth-service:7099"
        client:
          account:
            registration:
              client-id: "account"
              client-secret: "{noop}secret"
              client-authentication-methods:
                - "client_secret_basic"
              authorization-grant-types:
                - "authorization_code"
                - "refresh_token"
              redirect-uris:
                - "http://127.0.0.1:8083/api/account/login/oauth2/code/account"
              post-logout-redirect-uris:
                - "http://127.0.0.1:7099/"
              scopes:
                - "openid"
                - "profile"
              require-authorization-consent: true
  datasource:
#    driverClassName: org.h2.Driver
#    username: sa
#    password: password
#    url: jdbc:h2:mem:demo
    driverClassName: org.postgresql.Driver
    username: postgres
    password: pepeeselmejor
    url: jdbc:postgresql://localhost:5432/postgres
#  jpa:
#    hibernate:
#      ddl-auto: none
#    show-sql: true
#    defer-datasource-initialization: true
#    database-platform: org.hibernate.dialect.H2Dialect
#  h2:
#    console:
#      enabled: true

api:
  security:
    token:
      secret: ${JWT_SECRET:secret}
  issuer: ${JWT_ISSUER:myessen}
logging:
  level:
    org:
      springframework:
        security: TRACE
management:
  tracing:
    sampling:
      probability: 1.0