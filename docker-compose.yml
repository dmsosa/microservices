services:
  config-server:
    image: dmservice/config-server
    container_name: config-server
    depends_on:
      service-registry:
        condition: service_healthy
    environment:
      SERVICE_REGISTRY_URL: ${SERVICE_REGISTRY_URL}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    build: config-server
    expose:
      - "8888"
    ports:
      - 127.0.0.1:8888:8888
    networks:
      - dmnetwork
  service-registry:
    image: dmservice/service-registry
    container_name: service-registry
    build: service-registry
    expose:
      - "8761"
    ports:
      - 127.0.0.1:8761:8761
    networks:
      - dmnetwork
  auth-service:
    image: dmservices/authservice
    container_name: auth-service
    depends_on:
      config-server:
        condition: service_healthy
      service-registry:
        condition: service_healthy
    environment:
      SERVICE_REGISTRY_URL: ${SERVICE_REGISTRY_URL}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: authdb
    expose:
      - "9000"
    ports:
      - 127.0.0.1:9000:9000
    networks:
      - dmnetwork
  gateway:
    image: dmservices/gateway
    container_name: gateway
    depends_on:
      config-server:
        condition: service_healthy
      service-registry:
        condition: service_healthy
      auth-service:
        condition: service_healthy
    environment:
      SERVICE_REGISTRY_URL: ${SERVICE_REGISTRY_URL}
      HOST_ISSUER_URI: ${HOST_ISSUER_URI}
    expose:
      - "8061"
    ports:
      - 127.0.0.1:8061:8061
    networks:
      - dmnetwork
#micro services
  account:
    image: dmservices/stats
    depends_on:
      auth-service:
        condition: service_healthy
    environment:
      SERVICE_REGISTRY_URL: ${SERVICE_REGISTRY_URL}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: accountdb
    container_name: account
    build: account
    expose:
      - "8083"
    ports:
      - 127.0.0.1:8083:8083
    networks:
      - dmnetwork
  stats:
    image: dmservices/stats
    depends_on:
      auth-service:
        condition: service_healthy
    environment:
      SERVICE_REGISTRY_URL: ${SERVICE_REGISTRY_URL}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: statsdb
    container_name: stats
    expose:
      - "8085"
    ports:
      - 127.0.0.1:8085:8085
    networks:
      - dmnetwork
  noti:
    image: dmservices/noti
    container_name: noti
    depends_on:
      auth-service:
        condition: service_healthy
    environment:
      SERVICE_REGISTRY_URL: ${SERVICE_REGISTRY_URL}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: notidb
    expose:
      - "8084"
    ports:
      - 127.0.0.1:8084:8084
    networks:
      - dmnetwork
  #databases
  authdb:
    image: dmservices/postgresql-microservices
    container_name: authdb
    build: postgresql
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    expose:
      - "5000"
    ports:
      - 127.0.0.1:5000:5432
    networks:
      - dmnetwork
  accountdb:
    image: dmservices/postgresql-microservices
    container_name: accountdb
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    expose:
      - "5001"
    ports:
      - 127.0.0.1:5001:5432
    networks:
      - dmnetwork
  statsdb:
    image: dmservices/postgresql-microservices
    container_name: statsdb
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    expose:
      - "5002"
    ports:
      - 127.0.0.1:5002:5432
    networks:
      - dmnetwork
  notidb:
    image: dmservices/postgresql-microservices
    container_name: notidb
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    expose:
      - "5003"
    ports:
      - 127.0.0.1:5003:5432
    networks:
      - dmnetwork
volumes:
  dmservicesvol:
networks:
  dmnetwork:
    name: dmnetwork
    external: true